{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhu\\\\OneDrive\\\\Desktop\\\\bp\\\\src\\\\components\\\\Task.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './Task.module.css';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const addTask = () => {\n    if (newTask.trim()) {\n      setTasks([...tasks, newTask]);\n      setNewTask('');\n    }\n  };\n  const deleteTask = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n  };\n  const updateTask = (index, updatedTask) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index] = updatedTask;\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.navbar,\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.taskContent,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.addTaskButton,\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.taskItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const updatedTask = prompt('Update the task:', task);\n                if (updatedTask) {\n                  updateTask(index, updatedTask);\n                }\n              },\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPage, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useState","styles","Navbar","jsxDEV","_jsxDEV","TaskPage","_s","tasks","setTasks","newTask","setNewTask","addTask","trim","deleteTask","index","updatedTasks","splice","updateTask","updatedTask","children","className","navbar","fileName","_jsxFileName","lineNumber","columnNumber","taskContent","type","value","onChange","e","target","addTaskButton","onClick","map","task","taskItem","prompt","_c","$RefreshReg$"],"sources":["C:/Users/madhu/OneDrive/Desktop/bp/src/components/Task.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './Task.module.css';\r\nimport Navbar from './Navbar';\r\n\r\nconst TaskPage = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const addTask = () => {\r\n    if (newTask.trim()) {\r\n      setTasks([...tasks, newTask]);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  const deleteTask = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks.splice(index, 1);\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const updateTask = (index, updatedTask) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index] = updatedTask;\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.navbar}>\r\n        <Navbar />\r\n      </div>\r\n      <div className={styles.taskContent}>\r\n        <h1>Task Page</h1>\r\n        <input\r\n          type=\"text\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <button className={styles.addTaskButton} onClick={addTask}>\r\n          Add Task\r\n        </button>\r\n        <ul>\r\n          {tasks.map((task, index) => (\r\n            <li key={index} className={styles.taskItem}>\r\n              <span>{task}</span>\r\n              <div>\r\n                <button onClick={() => deleteTask(index)}>Delete</button>\r\n                <button\r\n                  onClick={() => {\r\n                    const updatedTask = prompt('Update the task:', task);\r\n                    if (updatedTask) {\r\n                      updateTask(index, updatedTask);\r\n                    }\r\n                  }}\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}